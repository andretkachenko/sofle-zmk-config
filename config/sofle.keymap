/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#include "include/layers.h"
#include "include/timings.h"
#include "include/key_positions.h"

#include "settings/sofle.dtsi"

/ {
    behaviors {
        /* left-hand HRMs */
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <TAP_TIME_MS>;
            quick-tap-ms = <QUICK_TAP_MS>; // repeat on tap-into-hold
            require-prior-idle-ms = <IDLE_MS>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release; // delay positional check until key-release
        };

        /* right-hand HRMs */
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <TAP_TIME_MS>;
            quick-tap-ms = <QUICK_TAP_MS>; // repeat on tap-into-hold
            require-prior-idle-ms = <IDLE_MS>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release; // delay positional check until key-release
        };

        /* mod morphs */        
        rem: rem { // tap: backspace | shift + tap: delete
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    /* combos */
    combos {
        compatible = "zmk,combos";

        game_mode { // space + enter -> uni layer
            timeout-ms = <50>;
            key-positions = <53 56>;
            bindings = <&to UNI>;
            require-prior-idle-ms = <IDLE_MS>;
            slow-release;
        };

        sys_mode { // SYM + NUM -> sys layer
            timeout-ms = <50>;
            key-positions = <54 55>;
            bindings = <&to SYS>;
            require-prior-idle-ms = <IDLE_MS>;
            slow-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";
            bindings = <
&none          &none          &none         &none         &none          &none                                          &none           &none           &none         &none            &none            &none
&none          &kp Q          &kp W         &kp E         &kp R          &kp T                                          &kp Y           &kp U           &kp I         &kp O            &kp P            &none
&none          &hml LGUI A    &hml LALT S   &hml LCTRL D  &hml LSHFT F   &kp G                                          &kp H           &hmr RSHFT J    &hmr RCTRL K  &hmr RALT L      &hmr RGUI SEMI   &none
&none          &kp Z          &kp X         &kp C         &kp V          &kp B             &none          &none         &kp N           &kp M           &kp COMMA     &kp DOT          &kp FSLH         &none
                              &none         &none         &lt FN ESC     &kp SPACE         &lt SYM TAB    &lt NUM RET   &rem            &lt NAV DEL     &none         &none  
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp RIGHT LEFT >;
        };

        #include "layers/sofle/nav.dtsi"    
        #include "layers/sofle/num.dtsi"    
        #include "layers/sofle/sym.dtsi"    
        #include "layers/sofle/fn.dtsi"        
        #include "layers/sofle/hub.dtsi"
        #include "layers/sofle/sys.dtsi"
        #include "layers/sofle/uni.dtsi"
    };
};